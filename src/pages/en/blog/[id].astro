---
export const prerender = true;

import { getCollection, getEntry, render } from "astro:content";
import BlogNewsletterSignup from "../../../components/blog/BlogNewsletterSignup.astro";
import BlogPostAuthors from "../../../components/blog/BlogPostAuthors.astro";
import BlogPostMetadata from "../../../components/blog/BlogPostMetadata.astro";
import SidebarBlogPost from "../../../components/navigation/sidebars/SidebarBlogPost.astro";
import PageHeaderImg from "../../../components/PageHeaderImg.astro";
import LayoutBase from "../../../layouts/LayoutBase.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blogCollection", ({ id }) => {
    return id.startsWith("en/");
  });
  return posts.map((post) => ({
    params: { id: post.id.replace("en/", "") },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

const authors = await Promise.all(
  post.data.author.map(async (authorRef) => {
    return await getEntry("authorCollection", authorRef.id);
  }),
);

const schema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url,
  },
  headline: post.data.title,
  description: post.data.description,
  image: post.data.thumbnailImg,
  author: authors.map((author) => ({
    "@type": "Person",
    name: author?.data.name,
    url: author?.data.socialLinks?.website || "https://hallin.media",
    image: author?.data.avatar,
  })),
  publisher: {
    "@type": "Organization",
    name: "HallinMedia",
    logo: {
      "@type": "ImageObject",
      url: "https://hallin.media/meta.png",
    },
  },
  datePublished: post.data.publishedDate,
  dateModified: post.data.publishedDate,
};
---

<LayoutBase
  title={post.data.title}
  description={post.data.description}
  article={true}
  schema={schema}
>
  <SidebarBlogPost slot="sidebar" post={post} />

  <article slot="content" class="space-y-8">
    <header>
      <PageHeaderImg
        headerImgSrc={post.data.thumbnailImg}
        headerImgAlt={post.data.thumbnailImgAlt}
        headingText={post.data.title}
        headingItalic={false}
        descriptionText={post.data.description}
        showBtn={false}
      />

      <BlogPostMetadata post={post} />
    </header>

    <main
      class="prose dark:prose-invert prose-stone prose-headings:font-serif prose-headings:font-medium prose-a:hover:bg-red-400 prose-a:hover:text-stone-100 prose-a:active:opacity-50 prose-a:decoration-dashed prose-a:decoration-from-font prose-a:underline-offset-2"
    >
      <Content />
    </main>

    <BlogPostAuthors authors={authors} />

    <hr class="border-stone-300 dark:border-stone-700" />

    <section aria-labelledby="newsletter-signup">
      <BlogNewsletterSignup />
    </section>

    <hr class="border-stone-300 dark:border-stone-700" />

    <section>
      <script
        src="https://giscus.app/client.js"
        data-repo="whallin/website"
        data-repo-id="R_kgDOPfSzkg"
        data-category="Giscus Comments"
        data-category-id="DIC_kwDOPfSzks4CuRB9"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="0"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="preferred_color_scheme"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async></script>
    </section>
  </article>
</LayoutBase>
