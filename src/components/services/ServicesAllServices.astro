---
import { getCollection } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import PixelarticonsArrowRight from "../icons/PixelarticonsArrowRight.astro";

const locale = (Astro.currentLocale as "en" | "sv") ?? "en";

const services = (await getCollection("servicesCollection")).sort(
  (a, b) => a.data.order - b.data.order,
);

async function getIconComponent(iconName: string) {
  try {
    const iconModule = await import(`../icons/${iconName}.astro`);
    return iconModule.default;
  } catch (error) {
    console.warn(`Icon ${iconName} not found, falling back to default`);
    const fallbackModule = await import(
      "../icons/PixelarticonsBriefcase.astro"
    );
    return fallbackModule.default;
  }
}

const servicesWithIcons = await Promise.all(
  services.map(async (service) => ({
    ...service,
    IconComponent: await getIconComponent(service.data.icon),
  })),
);

const translations = {
  en: {
    allServices: "All services",
    learnMoreAria: "Learn more about ",
    learnMore: "Learn more",
    featured: "Featured",
  },
  sv: {
    allServices: "Alla tjänster",
    learnMoreAria: "Läs mer om ",
    learnMore: "Läs mer",
    featured: "Utvald",
  },
};
---

<section aria-labelledby="services-heading">
  <h2 id="services-heading" class="sr-only">
    {translations[locale].allServices}
  </h2>

  <div class="grid gap-6 lg:grid-cols-2">
    {
      servicesWithIcons.map((service) => {
        return (
          <article class="group relative border border-stone-200 transition hover:border-stone-300 active:opacity-50 dark:border-stone-700 dark:hover:border-stone-600 dark:active:bg-stone-800 dark:active:opacity-100">
            <a
              href={getRelativeLocaleUrl(locale, `/services/${service.id}`)}
              aria-label={
                translations[locale].learnMoreAria + service.data.title[locale]
              }
              class="block h-full p-6"
            >
              <header class="mb-4 flex flex-wrap-reverse items-start justify-between gap-4">
                <div class="flex items-center gap-2 text-stone-800 dark:text-stone-100">
                  <service.IconComponent
                    aria-hidden="true"
                    class="h-6 w-6 transition-colors group-hover:text-red-500 dark:group-hover:text-red-400"
                  />
                  <h3 class="font-serif text-xl transition-colors group-hover:text-red-700 dark:group-hover:text-red-400">
                    {service.data.title[locale]}
                  </h3>
                </div>

                {service.data.featured && (
                  <span class="rounded-full bg-red-100 px-2 py-1 text-xs font-medium tracking-tight text-red-700 dark:bg-red-900/50 dark:text-red-400">
                    {translations[locale].featured}
                  </span>
                )}
              </header>

              <p class="mb-4 line-clamp-4 text-sm leading-relaxed text-stone-600 sm:line-clamp-2 dark:text-stone-400">
                {service.data.description[locale]}
              </p>

              <footer class="flex flex-col justify-between gap-2 sm:flex-row sm:items-center">
                <span class="hidden text-xs font-medium tracking-wider text-stone-500 uppercase md:block">
                  {service.data.category[locale]}
                </span>

                <span
                  aria-hidden="true"
                  class="flex items-center gap-1 px-px text-sm text-stone-500 transition-transform group-hover:translate-x-0.5 group-hover:bg-red-400 group-hover:text-stone-100"
                >
                  {translations[locale].learnMore}
                  <PixelarticonsArrowRight
                    aria-hidden="true"
                    class="h-4 w-4 transition-transform group-hover:translate-x-0.5"
                  />
                </span>
              </footer>
            </a>
          </article>
        );
      })
    }
  </div>
</section>
