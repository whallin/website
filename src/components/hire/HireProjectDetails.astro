---
interface SelectOption {
  value: string;
  label: string;
}

interface FormField {
  id: string;
  name: string;
  type: "select" | "textarea";
  label: string;
  placeholder?: string;
  required?: boolean;
  rows?: number;
  options?: SelectOption[];
}

const locale = (Astro.currentLocale as "en" | "sv") ?? "en";

const translations = {
  en: {
    legend: "Project details",
    serviceTypeLabel: "Primary service",
    serviceTypeOptions: {
      select: "Select a service",
      brand: "Brand Identity & Strategy",
      web: "Web Design & Development",
      photography: "Photography & Visual Content",
      consultation: "Creative Consultation",
      multiple: "Multiple Services",
      custom: "Custom Project",
    },
    projectScaleLabel: "Project scale",
    projectScaleOptions: {
      select: "Select project scale",
      small: "Small (quick turnaround, focused scope)",
      medium: "Medium (standard timeline, moderate complexity)",
      large: "Large (extended timeline, comprehensive solution)",
      enterprise: "Enterprise (ongoing partnership, multiple deliverables)",
    },
    budgetLabel: "Budget range",
    budgetOptions: {
      select: "Select budget range",
      under2000: "Under SEK 2,000",
      between2000to5000: "SEK 2,000 - 5,000",
      between5000to10000: "SEK 5,000 - 10,000",
      between10000to25000: "SEK 10,000 - 25,000",
      over25000: "SEK 25,000+",
      flexible: "Flexible",
    },
    timelineLabel: "Target timeline",
    timelineOptions: {
      select: "Select timeline",
      asap: "ASAP",
      within1Month: "Within 1 month",
      oneToThreeMonths: "1-3 months",
      threeToSixMonths: "3-6 months",
      sixPlusMonths: "6+ months",
      flexible: "Flexible",
    },
    projectDescriptionLabel: "Project description",
    projectDescriptionPlaceholder:
      "Tell me about your project goals, target audience, specific requirements, and any other details that would help me understand your needs...",
    additionalInfoLabel: "Additional information",
    additionalInfoPlaceholder:
      "Any specific requirements, inspiration references, or questions you'd like to discuss...",
  },
  sv: {
    legend: "Projektdetaljer",
    serviceTypeLabel: "Primär tjänst",
    serviceTypeOptions: {
      select: "Välj en tjänst",
      brand: "Varumärkesidentitet & strategi",
      web: "Webbdesign & utveckling",
      photography: "Fotografi & visuellt innehåll",
      consultation: "Kreativ konsultation",
      multiple: "Flera tjänster",
      custom: "Anpassat projekt",
    },
    projectScaleLabel: "Projektskala",
    projectScaleOptions: {
      select: "Välj projektskala",
      small: "Litet (snabb leverans, fokuserat omfång)",
      medium: "Medel (standard tidslinje, måttlig komplexitet)",
      large: "Stort (utökad tidslinje, helhetslösning)",
      enterprise: "Företag (löpande partnerskap, flera leveranser)",
    },
    budgetLabel: "Budgetintervall",
    budgetOptions: {
      select: "Välj budgetintervall",
      under2000: "Under 2 000 kr",
      between2000to5000: "2 000 - 5 000 kr",
      between5000to10000: "5 000 - 10 000 kr",
      between10000to25000: "10 000 - 25 000 kr",
      over25000: "25 000 kr+",
      flexible: "Flexibel",
    },
    timelineLabel: "Mål tidslinje",
    timelineOptions: {
      select: "Välj tidslinje",
      asap: "Så snart som möjligt",
      within1Month: "Inom 1 månad",
      oneToThreeMonths: "1-3 månader",
      threeToSixMonths: "3-6 månader",
      sixPlusMonths: "6+ månader",
      flexible: "Flexibel",
    },
    projectDescriptionLabel: "Projektbeskrivning",
    projectDescriptionPlaceholder:
      "Berätta om dina projektmål, målgrupp, specifika krav och andra detaljer som kan hjälpa mig att förstå dina behov...",
    additionalInfoLabel: "Ytterligare information",
    additionalInfoPlaceholder:
      "Eventuella specifika krav, inspirationsreferenser eller frågor du vill diskutera...",
  },
};

const formFields: FormField[] = [
  {
    id: "service-type",
    name: "service_type",
    type: "select",
    label: translations[locale].serviceTypeLabel,
    required: true,
    options: [
      { value: "", label: translations[locale].serviceTypeOptions.select },
      {
        value: "Brand Identity & Strategy",
        label: translations[locale].serviceTypeOptions.brand,
      },
      {
        value: "Web Design & Development",
        label: translations[locale].serviceTypeOptions.web,
      },
      {
        value: "Photography & Visual Content",
        label: translations[locale].serviceTypeOptions.photography,
      },
      {
        value: "Creative Consultation",
        label: translations[locale].serviceTypeOptions.consultation,
      },
      {
        value: "Multiple Services",
        label: translations[locale].serviceTypeOptions.multiple,
      },
      {
        value: "Custom Project",
        label: translations[locale].serviceTypeOptions.custom,
      },
    ],
  },
  {
    id: "project-scale",
    name: "project_scale",
    type: "select",
    label: translations[locale].projectScaleLabel,
    options: [
      { value: "", label: translations[locale].projectScaleOptions.select },
      { value: "Small", label: translations[locale].projectScaleOptions.small },
      {
        value: "Medium",
        label: translations[locale].projectScaleOptions.medium,
      },
      { value: "Large", label: translations[locale].projectScaleOptions.large },
      {
        value: "Enterprise",
        label: translations[locale].projectScaleOptions.enterprise,
      },
    ],
  },
  {
    id: "budget",
    name: "budget",
    type: "select",
    label: translations[locale].budgetLabel,
    required: true,
    options: [
      { value: "", label: translations[locale].budgetOptions.select },
      {
        value: "Under SEK 2,000",
        label: translations[locale].budgetOptions.under2000,
      },
      {
        value: "SEK 2,000 - 5,000",
        label: translations[locale].budgetOptions.between2000to5000,
      },
      {
        value: "SEK 5,000 - 10,000",
        label: translations[locale].budgetOptions.between5000to10000,
      },
      {
        value: "SEK 10,000 - 25,000",
        label: translations[locale].budgetOptions.between10000to25000,
      },
      {
        value: "SEK 25,000+",
        label: translations[locale].budgetOptions.over25000,
      },
      { value: "Flexible", label: translations[locale].budgetOptions.flexible },
    ],
  },
  {
    id: "timeline",
    name: "timeline",
    type: "select",
    label: translations[locale].timelineLabel,
    required: true,
    options: [
      { value: "", label: translations[locale].timelineOptions.select },
      {
        value: "ASAP (Rush)",
        label: translations[locale].timelineOptions.asap,
      },
      {
        value: "Within 1 month",
        label: translations[locale].timelineOptions.within1Month,
      },
      {
        value: "1-3 months",
        label: translations[locale].timelineOptions.oneToThreeMonths,
      },
      {
        value: "3-6 months",
        label: translations[locale].timelineOptions.threeToSixMonths,
      },
      {
        value: "6+ months",
        label: translations[locale].timelineOptions.sixPlusMonths,
      },
      {
        value: "Flexible",
        label: translations[locale].timelineOptions.flexible,
      },
    ],
  },
  {
    id: "project-description",
    name: "project_description",
    type: "textarea",
    label: translations[locale].projectDescriptionLabel,
    placeholder: translations[locale].projectDescriptionPlaceholder,
    required: true,
    rows: 4,
  },
  {
    id: "additional-info",
    name: "additional_info",
    type: "textarea",
    label: translations[locale].additionalInfoLabel,
    placeholder: translations[locale].additionalInfoPlaceholder,
    rows: 3,
  },
];

const getFieldPairs = (fields: FormField[]) => {
  const selectFields = fields.filter((f) => f.type === "select");
  const textareaFields = fields.filter((f) => f.type === "textarea");

  const pairs: FormField[][] = [];
  for (let i = 0; i < selectFields.length; i += 2) {
    const pair = [selectFields[i], selectFields[i + 1]].filter(
      Boolean,
    ) as FormField[];
    pairs.push(pair);
  }

  return { pairs, textareaFields };
};

const { pairs: selectPairs, textareaFields } = getFieldPairs(formFields);
---

<fieldset class="space-y-4">
  <legend class="text-sm font-medium tracking-wider text-stone-500 uppercase">
    {translations[locale].legend}
  </legend>

  {
    selectPairs.map((pair) => (
      <div class="grid gap-4 sm:grid-cols-2">
        {pair.map((field) => (
          <div>
            <label
              for={field.id}
              class="text-sm font-medium tracking-tight text-stone-800 dark:text-stone-100"
            >
              {field.label}
              {field.required ? " *" : ""}
            </label>
            <select
              id={field.id}
              name={field.name}
              required={field.required}
              class="mt-2 w-full border border-stone-300 px-3 py-2 dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100"
            >
              {field.options?.map((option) => (
                <option value={option.value}>{option.label}</option>
              ))}
            </select>
          </div>
        ))}
      </div>
    ))
  }

  {
    textareaFields.map((field) => (
      <div>
        <label
          for={field.id}
          class="text-sm font-medium tracking-tight text-stone-800 dark:text-stone-100"
        >
          {field.label}
          {field.required ? " *" : ""}
        </label>
        <textarea
          id={field.id}
          name={field.name}
          required={field.required}
          rows={field.rows}
          placeholder={field.placeholder}
          class="mt-2 w-full border border-stone-300 px-3 py-2 placeholder:text-stone-500 dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100"
        />
      </div>
    ))
  }
</fieldset>
